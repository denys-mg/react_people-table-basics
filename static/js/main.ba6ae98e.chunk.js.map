{"version":3,"sources":["App.tsx","pages/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["App","getActiveLinkClass","isActive","cn","className","role","to","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","ok","Error","json","PersonLink","person","name","sex","born","died","slug","fatherName","motherName","father","mother","urlSlug","useParams","getClassByGender","gender","getParentInfo","parentName","personFromData","PeopleTable","people","map","PeoplePage","useState","peopleFromServer","setPeopleFromServer","isLoading","setIsLoading","errorMessage","setErrorMessage","isDataSuccessfulyFetched","preparePeopleData","preparedPeople","find","useEffect","catch","finally","length","NotFoundPage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ba6ae98e.chunk.js","sourcesContent":["import './App.scss';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const App = () => {\n  const getActiveLinkClass = ({ isActive }: { isActive: boolean }) => {\n    return cn('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    });\n  };\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={getActiveLinkClass}\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              to=\"/people\"\n              className={getActiveLinkClass}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      return response.json();\n    });\n}\n","import cn from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    slug,\n    fatherName,\n    motherName,\n    father,\n    mother,\n  } = person;\n\n  const { slug: urlSlug } = useParams();\n\n  const getClassByGender = (gender: string) => {\n    return cn({\n      'has-text-danger': gender === 'f',\n    });\n  };\n\n  const getParentInfo = (\n    parentName: string | null,\n    personFromData: Person | undefined,\n  ) => {\n    if (parentName && personFromData) {\n      return (\n        <Link\n          to={`${personFromData.slug}`}\n          className={getClassByGender(personFromData.sex)}\n        >\n          {parentName}\n        </Link>\n      );\n    }\n\n    if (parentName) {\n      return `${parentName}`;\n    }\n\n    return '-';\n  };\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': slug === urlSlug,\n      })}\n    >\n      <td>\n        <Link\n          to={`${slug}`}\n          className={getClassByGender(sex)}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>\n        {getParentInfo(motherName, mother)}\n      </td>\n\n      <td>\n        {getParentInfo(fatherName, father)}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonLink person={person} key={person.slug} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../../components/Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [\n    peopleFromServer,\n    setPeopleFromServer,\n  ] = useState<Person[] | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const isDataSuccessfulyFetched = !isLoading\n    && !errorMessage && peopleFromServer;\n\n  const preparePeopleData = (people: Person[]) => {\n    const preparedPeople = people.map(person => {\n      let mother;\n      let father;\n\n      if (person.motherName) {\n        mother = people.find(({ name }) => person.motherName === name);\n      }\n\n      if (person.fatherName) {\n        father = people.find(({ name }) => person.fatherName === name);\n      }\n\n      return { ...person, mother, father };\n    });\n\n    setPeopleFromServer(preparedPeople);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(preparePeopleData)\n      .catch(() => setErrorMessage('Something went wrong'))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {\n            isLoading && (\n              <Loader />\n            )\n          }\n\n          {\n            errorMessage && (\n              <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                {errorMessage}\n              </p>\n            )\n          }\n\n          {\n            isDataSuccessfulyFetched && (\n              peopleFromServer.length ? (\n                <PeopleTable people={peopleFromServer} />\n              ) : (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )\n            )\n          }\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root: React.FC = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}